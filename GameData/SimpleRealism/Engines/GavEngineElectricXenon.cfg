// Gav Electric Propulsion


// The idea is that the TWR should be punitive enough that it 
// A) Certainly doesn't allow landings (unless we're talking phobos)
// B) Doesn't really allow mercury orbital insertions direct from Earth (with some burning pre-SOI it's very possible)
// C) But at the same time doesn't take hours for the burn to happen (max TWR of any engine is 0.331 @ 4000 ISP with Xenon)

// So for reference at the top-end 2060 xenon tech level, with sufficient 2060 solar panels for mean Mercury orbit
// On a craft with 2060 orbital science, 2060 pluto antenna, sufficient deep space probe core avionics and fuel tank for 20000 m/s
// A thruster thruster 0.625m diameter would take 18hrs to burn through the fuel i.e. mean effective acceleration of 0.3m/s^2
// With a 1.25m part it would take 12hrs for a mean effective acceleration of 0.45m/s^2
// So 4x thrust (tweakscale mass and thrust are power2) results in effective 1.5x increase in acceleration
// In other words, ridiculous performance vs real-life but interesting enough for a game like KSP
// While still maintaining the real-world disadvantage of electrical propusion

// Allowing 10% minimal throttle which is unrealistic and diverges from RO's 50%...
// ...but convenient with variable power sources (variation in solar panel output Earth vs Mercury)

// Finally the power requirements are so that using solar panel at mean Mercury orbit would require:
// 	0.7-2.7*engine mass in solar panels for xenon
// 	2.6-7.5*engine mass in solar panels for argon
// 	0.3-0.6*engine mass in solar panels for lithium

// Balancing of the 3 propellants is as follows:
// Xenon has highest TWR, lowest ISP, lowest EC/kN, highest fuel density
// Argon has above average TWR and ISP, highest EC/kN, average fuel density
// Lithium has tiny TWR, very high ISP, above average EC/kN, very low fuel density
// Balanced to pay heavy price in versatility (power generation/storage or TWR) for that extra ISP
// The types of thruster don't really follow real life, the starting balance point was density
// Xenon and Argon are positioned about right relative to each other 
// But Lithium MPDT is opposite to real-life in most areas relative to Argon Hall-effect (TWR,EC/s,ISP)

// Note that patches go late to avoid the NFP tweaking patch

@PART[ionXenon-0625]:FOR[z_GavTechTree]
{
	@title = Thruster - Ion 
	@manufacturer = Generic
	@description = Generic Xenon Propulsion
	@mass = 0.05
	@TechRequired = ionPropulsion1980
	!EFFECTS[engage] {}
	!MODULE[ModuleEngineConfigs],* {}
	MODULE
	{
		name = ModuleEngineConfigs
		type = ModuleEnginesFX
		modded = false
		origMass = 0.05
		configuration = 1980 Xenon
		CONFIG
		{
			name = 1980 Xenon
			techRequired = ionPropulsion1980
			massMult = 1.0
			cost = 0
			minThrust = 0.0075
			maxThrust = 0.075
			heatProduction = 0
			runningEffectName = run_next
			thrustVectorTransformName = thrustTransform
			exhaustDamage = False
			PROPELLANT
			{
				name = ElectricCharge
				ratio = 50.86098
				DrawGauge = True
				minResToLeave = 10.0
			}
			PROPELLANT
			{
				name = XenonGas
				ratio = 1.0
				DrawGauge = True
			}
			atmosphereCurve
			{
				key = 0 2200
				key = 1 1
			}
		}
		CONFIG
		{
			name = 1995 Xenon
			techRequired = ionPropulsion1995
			massMult = 1.2
			cost = 0
			minThrust = 0.012
			maxThrust = 0.12
			heatProduction = 0
			runningEffectName = run_next
			thrustVectorTransformName = thrustTransform
			exhaustDamage = False
			PROPELLANT
			{
				name = ElectricCharge
				ratio = 68.63342
				DrawGauge = True
				minResToLeave = 10.0
			}
			PROPELLANT
			{
				name = XenonGas
				ratio = 1.0
				DrawGauge = True
			}
			atmosphereCurve
			{
				key = 0 2500
				key = 1 1
			}
		}
		CONFIG
		{
			name = 2005 Xenon
			techRequired = ionPropulsion2005
			massMult = 1.4
			cost = 0
			minThrust = 0.0175
			maxThrust = 0.175
			heatProduction = 0
			runningEffectName = run_next
			thrustVectorTransformName = thrustTransform
			exhaustDamage = False
			PROPELLANT
			{
				name = ElectricCharge
				ratio = 89.00671
				DrawGauge = True
				minResToLeave = 10.0
			}
			PROPELLANT
			{
				name = XenonGas
				ratio = 1.0
				DrawGauge = True
			}
			atmosphereCurve
			{
				key = 0 2800
				key = 1 1
			}
		}
		CONFIG
		{
			name = 2020 Xenon
			techRequired = ionPropulsion2020
			massMult = 1.5
			cost = 0
			minThrust = 0.020625
			maxThrust = 0.20625
			heatProduction = 0
			runningEffectName = run_next
			thrustVectorTransformName = thrustTransform
			exhaustDamage = False
			PROPELLANT
			{
				name = ElectricCharge
				ratio = 110.96940
				DrawGauge = True
				minResToLeave = 10.0
			}
			PROPELLANT
			{
				name = XenonGas
				ratio = 1.0
				DrawGauge = True
			}
			atmosphereCurve
			{
				key = 0 3200
				key = 1 1
			}
		}
		CONFIG
		{
			name = 2040 Xenon
			techRequired = ionPropulsion2040
			massMult = 1.6
			cost = 0
			minThrust = 0.024
			maxThrust = 0.24
			heatProduction = 0
			runningEffectName = run_next
			thrustVectorTransformName = thrustTransform
			exhaustDamage = False
			PROPELLANT
			{
				name = ElectricCharge
				ratio = 135.24396
				DrawGauge = True
				minResToLeave = 10.0
			}
			PROPELLANT
			{
				name = XenonGas
				ratio = 1.0
				DrawGauge = True
			}
			atmosphereCurve
			{
				key = 0 3600
				key = 1 1
			}
		}
		CONFIG
		{
			name = 2060 Xenon
			techRequired = ionPropulsion2060
			massMult = 1.7
			cost = 0
			minThrust = 0.027625
			maxThrust = 0.27625
			heatProduction = 0
			runningEffectName = run_next
			thrustVectorTransformName = thrustTransform
			exhaustDamage = False
			PROPELLANT
			{
				name = ElectricCharge
				ratio = 161.83038
				DrawGauge = True
				minResToLeave = 10.0
			}
			PROPELLANT
			{
				name = XenonGas
				ratio = 1.0
				DrawGauge = True
			}
			atmosphereCurve
			{
				key = 0 4000
				key = 1 1
			}
		}
	}
	// Minimal gimballing allowed, don't want it capable of swinging crafts around willy-nilly as free RCS
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = fxTransform
		gimbalRange = 1
 		gimbalResponseSpeed = 2
 		useGimbalResponseSpeed = true
	}
}